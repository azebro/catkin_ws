// Generated by gencpp from file assignment1/Tsp.msg
// DO NOT EDIT!


#ifndef ASSIGNMENT1_MESSAGE_TSP_H
#define ASSIGNMENT1_MESSAGE_TSP_H

#include <ros/service_traits.h>


#include <assignment1/TspRequest.h>
#include <assignment1/TspResponse.h>


namespace assignment1
{

struct Tsp
{

typedef TspRequest Request;
typedef TspResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Tsp
} // namespace assignment1


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::assignment1::Tsp > {
  static const char* value()
  {
    return "cc44a8559cc239a440bb56303c3636a1";
  }

  static const char* value(const ::assignment1::Tsp&) { return value(); }
};

template<>
struct DataType< ::assignment1::Tsp > {
  static const char* value()
  {
    return "assignment1/Tsp";
  }

  static const char* value(const ::assignment1::Tsp&) { return value(); }
};


// service_traits::MD5Sum< ::assignment1::TspRequest> should match 
// service_traits::MD5Sum< ::assignment1::Tsp > 
template<>
struct MD5Sum< ::assignment1::TspRequest>
{
  static const char* value()
  {
    return MD5Sum< ::assignment1::Tsp >::value();
  }
  static const char* value(const ::assignment1::TspRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::assignment1::TspRequest> should match 
// service_traits::DataType< ::assignment1::Tsp > 
template<>
struct DataType< ::assignment1::TspRequest>
{
  static const char* value()
  {
    return DataType< ::assignment1::Tsp >::value();
  }
  static const char* value(const ::assignment1::TspRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::assignment1::TspResponse> should match 
// service_traits::MD5Sum< ::assignment1::Tsp > 
template<>
struct MD5Sum< ::assignment1::TspResponse>
{
  static const char* value()
  {
    return MD5Sum< ::assignment1::Tsp >::value();
  }
  static const char* value(const ::assignment1::TspResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::assignment1::TspResponse> should match 
// service_traits::DataType< ::assignment1::Tsp > 
template<>
struct DataType< ::assignment1::TspResponse>
{
  static const char* value()
  {
    return DataType< ::assignment1::Tsp >::value();
  }
  static const char* value(const ::assignment1::TspResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // ASSIGNMENT1_MESSAGE_TSP_H
