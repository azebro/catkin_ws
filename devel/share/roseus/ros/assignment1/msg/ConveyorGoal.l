;; Auto-generated. Do not edit!


(when (boundp 'assignment1::ConveyorGoal)
  (if (not (find-package "ASSIGNMENT1"))
    (make-package "ASSIGNMENT1"))
  (shadow 'ConveyorGoal (find-package "ASSIGNMENT1")))
(unless (find-package "ASSIGNMENT1::CONVEYORGOAL")
  (make-package "ASSIGNMENT1::CONVEYORGOAL"))

(in-package "ROS")
;;//! \htmlinclude ConveyorGoal.msg.html


(defclass assignment1::ConveyorGoal
  :super ros::object
  :slots (_maxSpawns ))

(defmethod assignment1::ConveyorGoal
  (:init
   (&key
    ((:maxSpawns __maxSpawns) 0)
    )
   (send-super :init)
   (setq _maxSpawns (round __maxSpawns))
   self)
  (:maxSpawns
   (&optional __maxSpawns)
   (if __maxSpawns (setq _maxSpawns __maxSpawns)) _maxSpawns)
  (:serialization-length
   ()
   (+
    ;; int32 _maxSpawns
    4
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; int32 _maxSpawns
       (write-long _maxSpawns s)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; int32 _maxSpawns
     (setq _maxSpawns (sys::peek buf ptr- :integer)) (incf ptr- 4)
   ;;
   self)
  )

(setf (get assignment1::ConveyorGoal :md5sum-) "07cbe60e323004a5c1edebd284d349d6")
(setf (get assignment1::ConveyorGoal :datatype-) "assignment1/ConveyorGoal")
(setf (get assignment1::ConveyorGoal :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
int32 maxSpawns

")



(provide :assignment1/ConveyorGoal "07cbe60e323004a5c1edebd284d349d6")


